data.experiments=['cls2pk']

# Cosmological parameters list

data.parameters['Omega_b']      = [   0.048,   0.03, 0.07,      0.005,    1, 'cosmo']
data.parameters['Omega_m']      = [     0.3,    0.1,  0.9,      0.025,    1, 'cosmo']
data.parameters['h']            = [    0.69,   0.55, 0.91,       0.05,    1, 'cosmo']
data.parameters['A_s']          = [    2.19,    0.5,  5.0,        0.5, 1e-9, 'cosmo']
data.parameters['n_s']          = [    0.97,   0.87, 1.07,      0.025,    1, 'cosmo']

# Derived parameters

data.parameters['Omega_Lambda']    = [1, None, None, 0,     1,   'derived']
data.parameters['100*theta_s']     = [0, None, None, 0,     1,   'derived']
data.parameters['sigma8']          = [0, None, None, 0,     1,   'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

data.cosmo_arguments['k_pivot'] = 0.05

data.cosmo_arguments['N_ur'] = 0. # number of massless species 0
data.cosmo_arguments['N_ncdm'] = 1 # 1 number of non-cold dm (relativistic) species 
data.cosmo_arguments['deg_ncdm'] = 3 # degeneracy for 3 equally massive neutrinos 
data.cosmo_arguments['m_ncdm'] = 0.02 # total neutrino mass 0.06 

# These two are required to get sigma8 as a derived parameter
# (class must compute the P(k) until sufficient k)
data.cosmo_arguments['output'] = 'mPk'
# data.cosmo_arguments['P_k_max_h/Mpc'] = 1.

#------ Mcmc parameters ----

data.N=10
data.write_step=5

#-----Likelihood-DES_alpha_k-----
DES_alpha_k.alpha_file = 'DES_nk24.npz'
